package component

// Code generated by scrapper/entityBp.ts;

// Allows a mob to stalk a target, then once within range pounce onto a target, on success the target will be attacked dealing damage defined by the attack component. On failure, the mob will risk getting stuck  
type Behavior_StalkAndPounceOnTarget struct {
  // The amount of time the mob will be interested before pouncing. This happens when the mob is within range of pouncing
  InterestTime *float64 `json:"interest_time,omitempty"`
  // The distance in blocks the mob jumps in the direction of its target
  LeapDistance *float64 `json:"leap_distance,omitempty"`
  // The height in blocks the mob jumps when leaping at its target
  LeapHeight *float64 `json:"leap_height,omitempty"`
  // The maximum distance away a target can be before the mob gives up on stalking
  MaxStalkDist *float64 `json:"max_stalk_dist,omitempty"`
  // The maximum distance away from the target in blocks to begin pouncing at the target
  PounceMaxDist *float64 `json:"pounce_max_dist,omitempty"`
  // Allows the actor to be set to persist upon targeting a player
  SetPersistent bool `json:"set_persistent,omitempty"`
  // The movement speed in which you stalk your target
  StalkSpeed *float64 `json:"stalk_speed,omitempty"`
  // The max distance away from the target when landing from the pounce that will still result in damaging the target
  StrikeDist *float64 `json:"strike_dist,omitempty"`
  // The amount of time the mob will be stuck if they fail and land on a block they can be stuck on
  StuckTime *float64 `json:"stuck_time,omitempty"`
  // The priority of this behavior. Lower values are higher priority.
  Priority int `json:"priority,omitempty"`
}
