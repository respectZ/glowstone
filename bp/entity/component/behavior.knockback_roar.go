package component

// Code generated by scrapper/entityBp.ts;

import (
  f "github.com/respectZ/glowstone/bp/types"
)

// Allows the mob to perform a damaging knockback that affects all nearby entities.  
type Behavior_KnockbackRoar struct {
  // The delay after which the knockback occurs (in seconds).
  AttackTime float64 `json:"attack_time,omitempty"`
  // Time (in seconds) the mob has to wait before using the goal again.
  CooldownTime float64 `json:"cooldown_time,omitempty"`
  // The list of conditions another entity must meet to be a valid target to apply damage to.
  DamageFilters *f.Filter `json:"damage_filters,omitempty"`
  // The max duration of the roar (in seconds).
  Duration float64 `json:"duration,omitempty"`
  // The damage dealt by the knockback roar.
  KnockbackDamage int `json:"knockback_damage,omitempty"`
  // The list of conditions another entity must meet to be a valid target to apply knockback to.
  KnockbackFilters *f.Filter `json:"knockback_filters,omitempty"`
  // The maximum height for vertical knockback.
  KnockbackHeightCap float64 `json:"knockback_height_cap,omitempty"`
  // The strength of the horizontal knockback.
  KnockbackHorizontalStrength int `json:"knockback_horizontal_strength,omitempty"`
  // The radius (in blocks) of the knockback effect.
  KnockbackRange int `json:"knockback_range,omitempty"`
  // The strength of the vertical knockback.
  KnockbackVerticalStrength int `json:"knockback_vertical_strength,omitempty"`
  // [Trigger] Event that is triggered when the roar ends.
  OnRoarEnd interface{} `json:"on_roar_end,omitempty"`
  // The priority of this behavior. Lower values are higher priority.
  Priority int `json:"priority,omitempty"`
}
