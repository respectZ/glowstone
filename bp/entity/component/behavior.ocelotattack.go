package component

// Code generated by scrapper/entityBp.ts;

// Allows an entity to attack by sneaking and pouncing.  
type Behavior_Ocelotattack struct {
  // Time (in seconds) between attacks.
  CooldownTime float64 `json:"cooldown_time,omitempty"`
  // Max distance from the target, this entity will use this attack behavior.
  MaxDistance float64 `json:"max_distance,omitempty"`
  // Max distance from the target, this entity starts sneaking.
  MaxSneakRange float64 `json:"max_sneak_range,omitempty"`
  // Max distance from the target, this entity starts sprinting (sprinting takes priority over sneaking).
  MaxSprintRange float64 `json:"max_sprint_range,omitempty"`
  // Used with the base size of the entity to determine minimum target-distance before trying to deal attack damage.
  ReachMultiplier float64 `json:"reach_multiplier,omitempty"`
  // Modifies the attacking entity's movement speed while sneaking.
  SneakSpeedMultiplier float64 `json:"sneak_speed_multiplier,omitempty"`
  // Modifies the attacking entity's movement speed while sprinting.
  SprintSpeedMultiplier float64 `json:"sprint_speed_multiplier,omitempty"`
  // Modifies the attacking entity's movement speed when not sneaking or sprinting, but still within attack range.
  WalkSpeedMultiplier float64 `json:"walk_speed_multiplier,omitempty"`
  // Maximum rotation (in degrees), on the X-axis, this entity can rotate while trying to look at the target.
  XMaxRotation float64 `json:"x_max_rotation,omitempty"`
  // Maximum rotation (in degrees), on the Y-axis, this entity can rotate its head while trying to look at the target.
  YMaxHeadRotation float64 `json:"y_max_head_rotation,omitempty"`
  // The priority of this behavior. Lower values are higher priority.
  Priority int `json:"priority,omitempty"`
}
