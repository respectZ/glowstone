package component

// Code generated by scrapper/entityBp.ts;

import (
  f "github.com/respectZ/glowstone/bp/types"
)

// [Not a component] List of entity types this mob will startle (cause to jump) when it sneezes.
type BehaviorSneezeEntityTypes struct {
  // The amount of time in seconds that the mob has to wait before selecting a target of the same type again
  Cooldown float64 `json:"cooldown,omitempty"`
  // Conditions that make this entry in the list valid
  Filters *f.Filter `json:"filters,omitempty"`
  // Maximum distance this mob can be away to be a valid choice
  MaxDist float64 `json:"max_dist,omitempty"`
  // If true, the mob has to be visible to be a valid choice
  MustSee bool `json:"must_see,omitempty"`
  // Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more
  MustSeeForgetDuration float64 `json:"must_see_forget_duration,omitempty"`
  // If true, the mob will stop being targeted if it stops meeting any conditions.
  ReevaluateDescription bool `json:"reevaluate_description,omitempty"`
  // Multiplier for the running speed. A value of 1.0 means the speed is unchanged
  SprintSpeedMultiplier float64 `json:"sprint_speed_multiplier,omitempty"`
  // Multiplier for the walking speed. A value of 1.0 means the speed is unchanged
  WalkSpeedMultiplier float64 `json:"walk_speed_multiplier,omitempty"`
}

// Allows the mob to stop and sneeze possibly startling nearby mobs and dropping an item.  
type Behavior_Sneeze struct {
  // Time in seconds the mob has to wait before using the goal again
  CooldownTime float64 `json:"cooldown_time,omitempty"`
  // The probability that the mob will drop an item when it sneezes.
  DropItemChance float64 `json:"drop_item_chance,omitempty"`
  // Corresponding Type: BehaviorSneezeEntityTypes

  EntityTypes interface{} `json:"entity_types,omitempty"`
  // Loot table to select dropped items from.
  LootTable string `json:"loot_table,omitempty"`
  // Sound to play when the sneeze is about to happen.
  PrepareSound string `json:"prepare_sound,omitempty"`
  // The time in seconds that the mob takes to prepare to sneeze (while the prepare_sound is playing).
  PrepareTime float64 `json:"prepare_time,omitempty"`
  // The probability of sneezing. A value of 1.00 is 100%
  Probability float64 `json:"probability,omitempty"`
  // Sound to play when the sneeze occurs.
  Sound string `json:"sound,omitempty"`
  // Distance in blocks that mobs will be startled.
  WithinRadius float64 `json:"within_radius,omitempty"`
  // The priority of this behavior. Lower values are higher priority.
  Priority int `json:"priority,omitempty"`
}
