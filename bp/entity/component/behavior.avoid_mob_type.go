package component

// Code generated by scrapper/entityBp.ts;

import (
  f "github.com/respectZ/glowstone/bp/types"
)

// Allows the entity to run away from other entities that meet the criteria specified.  
type Behavior_AvoidMobType struct {
  // The sound event to play when the mob is avoiding another mob.
  AvoidMobSound string `json:"avoid_mob_sound,omitempty"`
  // The next target position the entity chooses to avoid another entity will be chosen within this XZ Distance.
  AvoidTargetXz int `json:"avoid_target_xz,omitempty"`
  // The next target position the entity chooses to avoid another entity will be chosen within this Y Distance.
  AvoidTargetY int `json:"avoid_target_y,omitempty"`
  // The list of conditions another entity must meet to be a valid target to avoid.
  EntityTypes *f.Filter `json:"entity_types,omitempty"`
  // Whether or not to ignore direct line of sight while this entity is running away from other specified entities.
  IgnoreVisibilty bool `json:"ignore_visibilty,omitempty"`
  // Maximum distance to look for an avoid target for the entity.
  MaxDist float64 `json:"max_dist,omitempty"`
  // How many blocks away from its avoid target the entity must be for it to stop fleeing from the avoid target.
  MaxFlee float64 `json:"max_flee,omitempty"`
  // [Trigger] Event that is triggered when escaping from a mob.
  OnEscapeEvent interface{} `json:"on_escape_event,omitempty"`
  // Percent chance this entity will stop avoiding another entity based on that entity's strength, where 1.0 = 100%.
  ProbabilityPerStrength float64 `json:"probability_per_strength,omitempty"`
  // Determine if we should remove target when fleeing or not.
  RemoveTarget bool `json:"remove_target,omitempty"`
  // The range of time in seconds to randomly wait before playing the sound again.
  SoundInterval float64 `json:"sound_interval,omitempty"`
  // How many blocks within range of its avoid target the entity must be for it to begin sprinting away from the avoid target.
  SprintDistance float64 `json:"sprint_distance,omitempty"`
  // Multiplier for sprint speed. 1.0 means keep the regular speed, while higher numbers make the sprint speed faster.
  SprintSpeedMultiplier float64 `json:"sprint_speed_multiplier,omitempty"`
  // Multiplier for walking speed. 1.0 means keep the regular speed, while higher numbers make the walking speed faster.
  WalkSpeedMultiplier float64 `json:"walk_speed_multiplier,omitempty"`
  // The priority of this behavior. Lower values are higher priority.
  Priority int `json:"priority,omitempty"`
}
