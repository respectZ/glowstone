package component

// Code generated by scrapper/entityBp.ts;

import (
  f "github.com/respectZ/glowstone/bp/types"
)

// Allows the entity to move toward a target, and drop an item near the target. This goal requires a "minecraft:navigation" to execute.  
type Behavior_DropItemFor struct {
  // Total time that the goal is on cooldown before it can be used again.
  Cooldown float64 `json:"cooldown,omitempty"`
  // The percent chance the entity will drop an item when using this goal.
  DropItemChance float64 `json:"drop_item_chance,omitempty"`
  // The list of conditions another entity must meet to be a valid target to drop an item for.
  EntityTypes *f.Filter `json:"entity_types,omitempty"`
  // Distance in blocks within the entity considers it has reached it's target position. 
  GoalRadius float64 `json:"goal_radius,omitempty"`
  // The loot table that contains the possible loot the entity can drop with this goal.
  LootTable string `json:"loot_table,omitempty"`
  // The maximum height the entities head will look at when dropping the item. The entity will always be looking at its target.
  MaxHeadLookAtHeight float64 `json:"max_head_look_at_height,omitempty"`
  // If the target position is farther away than this distance on any tick, the entity will teleport to the target position.
  MinimumTeleportDistance float64 `json:"minimum_teleport_distance,omitempty"`
  // The preferred distance the entity tries to be from the target it is dropping an item for.
  OfferingDistance float64 `json:"offering_distance,omitempty"`
  // [Trigger] The event to trigger when the entity attempts to drop an item.
  OnDropAttempt interface{} `json:"on_drop_attempt,omitempty"`
  // The number of blocks each tick that the entity will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick.
  SearchCount int `json:"search_count,omitempty"`
  // The Height in blocks the entity will search within to find a valid target position.
  SearchHeight int `json:"search_height,omitempty"`
  // The distance in blocks the entity will search within to find a valid target position.
  SearchRange int `json:"search_range,omitempty"`
  // The numbers of seconds that will pass before the dropped entity can be picked up from the ground.
  SecondsBeforePickup float64 `json:"seconds_before_pickup,omitempty"`
  // Movement speed multiplier of the entity when using this Goal.
  SpeedMultiplier float64 `json:"speed_multiplier,omitempty"`
  // [Vector3 [a,b,c]] The range in blocks within which the entity searches to find a target to drop an item for.
  TargetRange []float64 `json:"target_range,omitempty"`
  // [Vector3 [a,b,c]] When the entity teleports, offset the teleport position by this many blocks in the X, Y, and Z coordinate.
  TeleportOffset []float64 `json:"teleport_offset,omitempty"`
  // The valid times of day that this goal can be used. For reference: noon is 0.0, sunset is 0.25, midnight is 0.5, and sunrise is 0.75, and back to noon for 1.0.
  TimeOfDayRange float64 `json:"time_of_day_range,omitempty"`
  // The priority of this behavior. Lower values are higher priority.
  Priority int `json:"priority,omitempty"`
}
