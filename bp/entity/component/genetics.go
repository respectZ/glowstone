package component

// Code generated by scrapper/entityBp.ts;

// [Not a component] The range of positive integer allele values for this gene. Spawned mobs will have a random number in this range assigned to them.
type GeneticsAlleleRange struct {
  // Upper bound of the allele values for this gene.
  RangeMax int `json:"range_max,omitempty"`
  // Lower bound of the allele values for this gene.
  RangeMin int `json:"range_min,omitempty"`
}

// [Not a component] The list of genetic variants for this gene. These check for particular allele combinations and fire events when all of them are satisfied.
type GeneticsGeneticVariants struct {
  // Event to run when this mob is created and matches the allele conditions.
  BirthEvent string `json:"birth_event,omitempty"`
  // If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with both. Can also be a range of integers.
  BothAllele int `json:"both_allele,omitempty"`
  // If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with either. Can also be a range of integers.
  EitherAllele int `json:"either_allele,omitempty"`
  // If this value is non-negative, compare the mob's hidden allele with this value for a match. Can also be a range of integers.
  HiddenAllele int `json:"hidden_allele,omitempty"`
  // If this value is non-negative, compare the mob's main allele with this value for a match. Can also be a range of integers.
  MainAllele int `json:"main_allele,omitempty"`
}

// [Not a component] The list of genes that this entity has and will cross with a partner during breeding.
type GeneticsGenes struct {
  // The range of positive integer allele values for this gene. Spawned mobs will have a random number in this range assigned to them.
  AlleleRange GeneticsAlleleRange `json:"allele_range,omitempty"`
  // The list of genetic variants for this gene. These check for particular allele combinations and fire events when all of them are satisfied.
  GeneticVariants []GeneticsGeneticVariants `json:"genetic_variants,omitempty"`
  // If this value is non-negative, overrides the chance for this gene that an allele will be replaced with a random one instead of the parent's allele during birth. Non-negative values greater than `1` will be the same as the value `1`.
  MutationRate float64 `json:"mutation_rate,omitempty"`
  // The name of the gene.
  Name string `json:"name,omitempty"`
}

// Defines the way a mob's genes and alleles are passed on to its offspring, and how those traits manifest in the child. Compatible parent genes are crossed together, the alleles are handed down from the parents to the child, and any matching genetic variants fire off JSON events to modify the child and express the traits.  
type Genetics struct {
  // The list of genes that this entity has and will cross with a partner during breeding.
  Genes []GeneticsGenes `json:"genes,omitempty"`
  // Chance that an allele will be replaced with a random one instead of the parent's allele during birth.
  MutationRate float64 `json:"mutation_rate,omitempty"`
}
