package component

// Code generated by scrapper/entityBp.ts;

// Allows mob to move towards a block.  
type Behavior_MoveToBlock struct {
  // Distance in blocks within the mob considers it has reached the goal. This is the "wiggle room" to stop the AI from bouncing back and forth trying to reach a specific spot
  GoalRadius *float64 `json:"goal_radius,omitempty"`
  // [Trigger] Event to run on block reached.
  OnReach interface{} `json:"on_reach,omitempty"`
  // [Trigger] Event to run on completing a stay of stay_duration at the block.
  OnStayCompleted interface{} `json:"on_stay_completed,omitempty"`
  // The height in blocks that the mob will look for the block.
  SearchHeight *int `json:"search_height,omitempty"`
  // The distance in blocks that the mob will look for the block.
  SearchRange int `json:"search_range,omitempty"`
  // Movement speed multiplier of the mob when using this AI Goal
  SpeedMultiplier *float64 `json:"speed_multiplier,omitempty"`
  // Chance to start the behavior (applied after each random tick_interval).
  StartChance *float64 `json:"start_chance,omitempty"`
  // Number of ticks needed to complete a stay at the block.
  StayDuration float64 `json:"stay_duration,omitempty"`
  // Block types to move to.
  TargetBlocks []interface{} `json:"target_blocks,omitempty"`
  // [Vector3 [a,b,c]] Offset to add to the selected target position.
  TargetOffset *[]float64 `json:"target_offset,omitempty"`
  // Kind of block to find fitting the specification. Valid values are "random" and "nearest".
  TargetSelectionMethod *string `json:"target_selection_method,omitempty"`
  // Average interval in ticks to try to run this behavior.
  TickInterval *int `json:"tick_interval,omitempty"`
  // The priority of this behavior. Lower values are higher priority.
  Priority int `json:"priority,omitempty"`
}
